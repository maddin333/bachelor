
@online{noauthor_quick_nodate,
	title = {quick start guide [Zotero Documentation]},
	url = {https://www.zotero.org/support/quick_start_guide},
	urldate = {2019-07-03},
	file = {quick start guide [Zotero Documentation]:C\:\\Users\\marti\\Zotero\\storage\\ITFU48YI\\quick_start_guide.html:text/html}
}

@book{kubeck_software-sanierung:_2009,
	location = {Heidelberg ; München ; Landsberg ; Frechen ; Hamburg},
	edition = {1. Aufl.},
	title = {Software-Sanierung: Weiterentwicklung, Testen und Refactoring bestehender Software ; [weiterentwickeln bestehender Systeme ohne vorhandene Tests ; bestehenden Code mit Tests absichern ; Maßnahmen zur Verbesserung der Qualität]},
	isbn = {978-3-8266-5072-7},
	shorttitle = {Software-Sanierung},
	pagetotal = {359},
	publisher = {mitp},
	author = {Kübeck, Sebastian},
	date = {2009},
	keywords = {Softwaresanierung; Refactoring; Software; Testen; Software; Fehlerbehandlung; Weiterentwicklung, Sanierung}
}

@book{roock_refactorings_2004,
	location = {Heidelberg},
	edition = {1. Aufl.},
	title = {Refactorings in großen Softwareprojekten: komplexe Restrukturierungen erfolgreich durchführen},
	isbn = {978-3-89864-207-1},
	shorttitle = {Refactorings in großen Softwareprojekten},
	pagetotal = {x+272},
	publisher = {dpunkt-Verl},
	author = {Roock, Stefan},
	editora = {Lippert, Martin},
	editoratype = {collaborator},
	date = {2004},
	keywords = {Refactoring; Refactoring, Refactoring Deutsch}
}

@book{suryanarayana_refactoring_2015,
	location = {Amsterdam [u.a.]},
	title = {Refactoring for software design smells: managing technical debt},
	isbn = {978-0-12-801397-7},
	shorttitle = {Refactoring for software design smells},
	pagetotal = {xix+237},
	publisher = {Elsevier/Morgan Kaufmann},
	author = {Suryanarayana, Girish},
	editora = {Samarthyam, Ganesh and Sharma, Tushar},
	editoratype = {collaborator},
	date = {2015},
	keywords = {Software refactoring; Software failures, Refactoring}
}

@article{lientz_characteristics_1978,
	title = {Characteristics of Application Software Maintenance},
	volume = {21},
	issn = {0001-0782},
	url = {http://doi.acm.org/10.1145/359511.359522},
	doi = {10.1145/359511.359522},
	abstract = {Maintenance and enhancement of application software consume a major portion of the total life cycle cost of a system. Rough estimates of the total systems and programming resources consumed range as high as 75-80 percent in each category. However, the area has been given little attention in the literature. To analyze the problems in this area a questionnaire was developed and pretested. It was then submitted to 120 organizations. Respondents totaled 69. Responses were analyzed with the {SPSS} statistical package. The results of the analysis indicate that: (1) maintenance and enhancement do consume much of the total resources of systems and programming groups; (2) maintenance and enhancement tend to be viewed by management as at least somewhat more important than new application software development; (3) in maintenance and enhancement, problems of a management orientation tend to be more significant than those of a technical orientation; and (4) user demands for enhancements and extension constitute the most important management problem area.},
	pages = {466--471},
	number = {6},
	journaltitle = {Commun. {ACM}},
	author = {Lientz, B. P. and Swanson, E. B. and Tompkins, G. E.},
	urldate = {2019-07-08},
	date = {1978-06},
	keywords = {management and technical issues, software maintenance, use of productivity aids}
}

@article{hoda_rise_2018,
	title = {The Rise and Evolution of Agile Software Development},
	volume = {35},
	issn = {0740-7459},
	doi = {10.1109/MS.2018.290111318},
	abstract = {Agile software development has dominated the second half of the past 50 years of software engineering. Retrospectives, one of the most common agile practices, enables reflection on past performance, discussion of current progress, and charting forth directions for future improvement. Because of agile's burgeoning popularity as the software development model of choice and a significant research subdomain of software engineering, it demands a retrospective of its own. This article provides a historical overview of agile's main focus areas and a holistic synthesis of its trends, their evolution over the past two decades, agile's current status, and, forecast from these, agile's likely future. This article is part of a theme issue on software engineering's 50th anniversary.},
	pages = {58--63},
	number = {5},
	journaltitle = {{IEEE} Software},
	author = {Hoda, Rashina and Salleh, Norsaremah and Grundy, John},
	date = {2018},
	keywords = {Software Engineering ; Agile Software Development ; Market Research ; Planning ; Agile ; Agile Software Development ; Software Engineering ; Software Development ; Computer Science}
}

@book{roock_refactorings_2004-1,
	location = {Heidelberg},
	edition = {1. Aufl.},
	title = {Refactorings in großen Softwareprojekten: komplexe Restrukturierungen erfolgreich durchführen},
	isbn = {978-3-89864-207-1},
	shorttitle = {Refactorings in großen Softwareprojekten},
	pagetotal = {x+272},
	publisher = {dpunkt-Verl},
	author = {Roock, Stefan},
	editora = {Lippert, Martin},
	editoratype = {collaborator},
	date = {2004},
	keywords = {Refactoring; Refactoring}
}

@article{severance_inventing_2012,
	title = {Inventing {PHP}: Rasmus Lerdorf},
	volume = {45},
	issn = {0018-9162},
	doi = {10.1109/MC.2012.379},
	shorttitle = {Inventing {PHP}},
	abstract = {Unique among most of its peers, {PHP} wasn't conceived as a pure programming language.},
	pages = {6--7},
	number = {11},
	journaltitle = {Computer},
	author = {Severance, C.},
	date = {2012-11},
	keywords = {authoring languages, Computer languages, Hypertext Preprocessor, object-oriented programming, open source, {PHP}, Programming, programming language, programming languages, Rasmus Lerdorf, Web applications, Web development},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\marti\\Zotero\\storage\\AX948J6J\\6353442.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\D99VRDQ7\\Severance - 2012 - Inventing PHP Rasmus Lerdorf.pdf:application/pdf}
}

@inproceedings{kyriakakis_maintenance_2014,
	title = {Maintenance Patterns of Large-Scale {PHP} Web Applications},
	doi = {10.1109/ICSME.2014.60},
	abstract = {Scripting languages such as {PHP} have been criticized as inadequate for supporting maintenance of large-scale software projects. In this paper we attempt to provide insight into the way that five large and well-known {PHP} applications evolved over time. Several aspects of their history are examined including the amount of unused code, the removal of functions, the use of libraries, the stability of their interfaces, the migration to object-orientation and the evolution of complexity. The results suggest that these systems undergo systematic maintenance which is driven by targeted design decisions and evolution is by no means hindered by the underlying programming language.},
	eventtitle = {2014 {IEEE} International Conference on Software Maintenance and Evolution},
	pages = {381--390},
	booktitle = {2014 {IEEE} International Conference on Software Maintenance and Evolution},
	author = {Kyriakakis, P. and Chatzigeorgiou, A.},
	date = {2014-09},
	keywords = {software maintenance, {PHP}, Programming, programming language, programming languages, Communities, Internet, Java, Libraries, Maintenance engineering, maintenance pattern, {PHP} Web applications, scripting language, scripting languages, software evolution, software libraries, software project maintenance, Software systems, survival analysis, web applications},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\marti\\Zotero\\storage\\6LW6ADK7\\6976104.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\ELGTCUVQ\\Kyriakakis und Chatzigeorgiou - 2014 - Maintenance Patterns of Large-Scale PHP Web Applic.pdf:application/pdf}
}

@article{anderson_docker_2015,
	title = {Docker [Software engineering]},
	volume = {32},
	issn = {0740-7459},
	doi = {10.1109/MS.2015.62},
	abstract = {In episode 217 of Software Engineering Radio, host Charles Anderson talks with James Turnbull, a software developer and security specialist who's vice president of services at Docker. Lightweight Docker containers are rapidly becoming a tool for deploying microservice-based architectures.},
	pages = {102--c3},
	number = {3},
	journaltitle = {{IEEE} Software},
	author = {Anderson, C.},
	date = {2015-05},
	keywords = {Docker, Docker containers, Interviews, James Turnbull, microservices, {SE} Radio, Software development, Software engineering, Software Engineering Radio, Virtual machining},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\marti\\Zotero\\storage\\8EQCP6EJ\\7093032.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\JS3Q78QG\\Anderson - 2015 - Docker [Software engineering].pdf:application/pdf}
}

@article{noauthor_iso/iec/ieee_2006,
	title = {{ISO}/{IEC}/{IEEE} International Standard for Software Engineering - Software Life Cycle Processes - Maintenance},
	doi = {10.1109/IEEESTD.2006.235774},
	abstract = {This International Standard describes in greater detail management of the Maintenance Process described in {ISO}/{IEC} 12207, including Amendments. This International Standard also establishes definitions for the various types of maintenance. This International Standard provides guidance that applies to planning, execution and control, review and evaluation, and closure of the Maintenance Process. The scope of this International Standard includes maintenance for multiple software products with the same maintenance resources. “Maintenance” in this International Standard means software maintenance unless otherwise stated.},
	pages = {1--58},
	journaltitle = {{ISO}/{IEC} 14764:2006 (E) {IEEE} Std 14764-2006 Revision of {IEEE} Std 1219-1998)},
	date = {2006-09},
	keywords = {software maintenance, Software engineering, {IEEE} standards, {ISO}, life cycle, maintenance, software},
	file = {2006 - ISOIECIEEE International Standard for Software E.pdf:C\:\\Users\\marti\\Zotero\\storage\\BTWQZZGY\\2006 - ISOIECIEEE International Standard for Software E.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\marti\\Zotero\\storage\\ZRHRUT9J\\1703974.html:text/html}
}

@incollection{jung_addressed_2019,
	location = {Cham},
	title = {Addressed Challenges},
	isbn = {978-3-030-13499-0},
	url = {https://doi.org/10.1007/978-3-030-13499-0_3},
	abstract = {In this chapter, we discuss the diverse set of challenges, from different perspectives, that we face because of our aim to incorporate knowledge in software and processes tailored for software and systems evolution. Firstly, the discovery and externalization of knowledge about requirements, the recording and representation of design decisions, and the learning from past experiences in evolution form the human perspective, including developers, operators, and users. Secondly, performance and security induce the software quality perspective. Thirdly, round-trip engineering, testing, and co-evolution define the technical perspective. And fourthly, formal methods for evolutionary changes provide the foundation and define the formal perspective.},
	pages = {21--36},
	booktitle = {Managed Software Evolution},
	publisher = {Springer International Publishing},
	author = {Jung, Reiner and Märtin, Lukas and Johanssen, Jan Ole and Paech, Barbara and Lochau, Malte and Thüm, Thomas and Schneider, Kurt and Tichy, Matthias and Ulbrich, Mattias},
	editor = {Reussner, Ralf and Goedicke, Michael and Hasselbring, Wilhelm and Vogel-Heuser, Birgit and Keim, Jan and Märtin, Lukas},
	urldate = {2019-08-15},
	date = {2019},
	langid = {english},
	doi = {10.1007/978-3-030-13499-0_3},
	file = {Springer Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\GCMKZXNT\\Jürjens et al. - 2019 - Maintaining Security in Software Evolution.pdf:application/pdf;Springer Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\RKG3WVCV\\Kögel et al. - 2019 - Learning from Evolution for Evolution.pdf:application/pdf;Springer Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\AFY9WJHN\\Bougouffa et al. - 2019 - Introduction to Case Studies.pdf:application/pdf;Springer Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\DQKVFESH\\Beckert et al. - 2019 - Formal Verification of Evolutionary Changes.pdf:application/pdf;Springer Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\YIE33VTM\\Reussner et al. - 2019 - Future Research.pdf:application/pdf;Springer Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\CBJVUEU5\\Reussner et al. - 2019 - Introducing Managed Software Evolution.pdf:application/pdf;Springer Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\R9PJ9CGD\\Johanssen et al. - 2019 - Tacit Knowledge in Software Evolution.pdf:application/pdf;Springer Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\28YIR8NG\\Reussner et al. - 2019 - Lessons Learned.pdf:application/pdf;Springer Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\VXUWUIRH\\Lochau et al. - 2019 - Model-Based Round-Trip Engineering and Testing of .pdf:application/pdf;Springer Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\XUVNZ74B\\Kleebaum et al. - 2019 - Continuous Design Decision Support.pdf:application/pdf;Springer Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\B74XXH8V\\Thüm et al. - 2019 - Performance Analysis Strategies for Software Varia.pdf:application/pdf;Springer Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\M3L2HAFW\\Bougouffa et al. - 2019 - Case Studies for the Community.pdf:application/pdf;Springer Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\AD4KSDYB\\Taentzer et al. - 2019 - The Nature of Software Evolution.pdf:application/pdf;Springer Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\WA7C4U46\\Jung et al. - 2019 - Addressed Challenges.pdf:application/pdf}
}

@article{siame_evolution_2017,
	title = {Evolution of {PHP} Applications: A Systematic Literature Review},
	volume = {5},
	rights = {Copyright (c) 2017 Alinaswe Siame, Douglas Kunda},
	issn = {2197-8581},
	url = {https://online-journals.org/index.php/i-jes/article/view/6437},
	shorttitle = {Evolution of {PHP} Applications},
	abstract = {This paper reviews, some of the research work done in the evolution of {PHP} applications that have been around and are vastly used. {PHP} is currently one of the most popular programming languages, widely used in both the open source community and in industry to build large web-focused applications and application frameworks. This review looks at how {PHP} applications have evolved in terms of the use of libraries, the software maturity, adoption of object-orientation paradigm, the evolution of complexity and security. The results suggest that these systems undergo systematic maintenance and evolution is helping the underlying programming language to grow.},
	pages = {28--39},
	number = {1},
	journaltitle = {International Journal of Recent Contributions from Engineering, Science \& {IT} ({iJES})},
	author = {Siame, Alinaswe and Kunda, Douglas},
	urldate = {2019-08-15},
	date = {2017-03-29},
	langid = {english},
	file = {Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\JL8P29PT\\Siame und Kunda - 2017 - Evolution of PHP Applications A Systematic Litera.pdf:application/pdf;Snapshot:C\:\\Users\\marti\\Zotero\\storage\\UDQPRUZE\\6437.html:text/html}
}

@inproceedings{kyriakakis_maintenance_2014-1,
	title = {Maintenance Patterns of Large-Scale {PHP} Web Applications},
	doi = {10.1109/ICSME.2014.60},
	abstract = {Scripting languages such as {PHP} have been criticized as inadequate for supporting maintenance of large-scale software projects. In this paper we attempt to provide insight into the way that five large and well-known {PHP} applications evolved over time. Several aspects of their history are examined including the amount of unused code, the removal of functions, the use of libraries, the stability of their interfaces, the migration to object-orientation and the evolution of complexity. The results suggest that these systems undergo systematic maintenance which is driven by targeted design decisions and evolution is by no means hindered by the underlying programming language.},
	eventtitle = {2014 {IEEE} International Conference on Software Maintenance and Evolution},
	pages = {381--390},
	booktitle = {2014 {IEEE} International Conference on Software Maintenance and Evolution},
	author = {Kyriakakis, P. and Chatzigeorgiou, A.},
	date = {2014-09},
	keywords = {software maintenance, {PHP}, Programming, programming language, programming languages, Communities, Internet, Java, Libraries, Maintenance engineering, maintenance pattern, {PHP} Web applications, scripting language, scripting languages, software evolution, software libraries, software project maintenance, Software systems, survival analysis, web applications},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\marti\\Zotero\\storage\\C3PG7EDC\\6976104.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\marti\\Zotero\\storage\\XXQBXKVC\\Kyriakakis und Chatzigeorgiou - 2014 - Maintenance Patterns of Large-Scale PHP Web Applic.pdf:application/pdf}
}

@online{noauthor_php:_nodate,
	title = {{PHP}: What is {PHP}? - Manual},
	url = {https://www.php.net/manual/en/intro-whatis.php},
	urldate = {2019-08-26},
	file = {PHP\: What is PHP? - Manual:C\:\\Users\\marti\\Zotero\\storage\\SE8YYVJZ\\intro-whatis.html:text/html}
}